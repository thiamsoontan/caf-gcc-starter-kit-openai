# TODO: add inbound private endpoint

# global_settings = {
#   default_region = "region1"
#   regions = {
#     region1 = "australiaeast"
#   }
# }

# resource_groups = {
#   rg1 = {
#     name   = "funapp-private"
#     region = "region1"
#   }
# }


storage_accounts = {
  sa1 = {
    name               = "funapp-sa1"
    resource_group_key = "fa_rg_re1"
    region             = "region1"

    account_kind             = "StorageV2"
    account_tier             = "Standard"
    account_replication_type = "LRS"

    containers = {
      dev = {
        name = "random"
      }
    }

  }
}

# By default asp1 will inherit from the resource group location
app_service_plans = {
  asp1 = {
    resource_group_key = "fa_rg_re1"
    name               = "asp-simple"

    sku = {
      tier = "Standard"
      size = "S1"
    }
  }
}


linux_function_apps = {
  f1 = {
    name               = "document-processing"
    resource_group_key = "fa_rg_re1"
    region             = "region1"

    app_service_plan_key = "asp1"
    storage_account_key  = "sa1"

    settings = {
      #vnet_key   = "spoke"
      #subnet_key = "app"
      #subnet_id = "/subscriptions/97958dac-xxxx-xxxx-xxxx-9f436fa73bd4/resourceGroups/jana-rg-spoke/providers/Microsoft.Network/virtualNetworks/jana-vnet-spoke/subnets/jana-snet-app"
      subnet_id = "/subscriptions/{{subscription_id}}/resourceGroups/{{resource_group_name}}/providers/Microsoft.Network/virtualNetworks/{{internet_vnet_name}}/subnets/{{prefix}}-snet-function-apps-internet"
      enabled = true
    }
    tags = {
      application = "cep"
      env         = "uat"
    }

    # Optional - not working
    private_endpoints = {
      # Require enforce_private_link_endpoint_network_policies set to true on the subnet
      pe1-functionapp = {
        name       = "pep-function-app"
        #vnet_key   = "vnet1"
        #subnet_key = "web"
        #subnet_id          = "/subscriptions/97958dac-f75b-4ee3-9a07-9f436fa73bd4/resourceGroups/ppga-rg-sql-rg1/providers/Microsoft.Network/virtualNetworks/ppga-vnet-testvnet1/subnets/ppga-snet-web-subnet"
        subnet_id = "/subscriptions/{{subscription_id}}/resourceGroups/{{resource_group_name}}/providers/Microsoft.Network/virtualNetworks/{{internet_vnet_name}}/subnets/{{prefix}}-snet-app-internet"
        resource_group_key = "fa_rg_re1"

        private_service_connection = {
          name                 = "psc-functionapp"
          is_manual_connection = false
          subresource_names    = ["sites"]
        }

        private_dns = {
          zone_group_name = "default"
          # lz_key          = ""   # If the DNS keys are deployed in a remote landingzone
          keys = ["fa_dns_re1"]
        }
      }
    }

  }
}


# app_service_plans = {
#   asp1 = {
#     name               = "azure-functions-test-service-plan"
#     resource_group_key = "function_app_re1"
#     region             = "region1"
#     kind               = "functionapp"
#     reserved           = true

#     sku = {
#       tier = "Dynamic"
#       size = "Y1"
#     }
#   }
# }

# function_apps = {


#   faaps1 = {
#     name                 = "test-azure-functions"
#     resource_group_key   = "function_app_re1"
#     region               = "region1"
#     app_service_plan_key = "asp1"
#     storage_account_key  = "sa1"
#     settings = {
#       os_type = "linux"
#       version = "~3"
#     }

#   }

#   # TODO: add function apps for getjob, createjob, processjob, urltopdf, instagram
#   f1_test = {
#     name               = "funapp-private"
#     resource_group_key = "function_app_re1"
#     region             = "region1"

#     app_service_plan_key = "asp1"
#     storage_account_key  = "sa1"

#     settings = {
#       #vnet_key   = "spoke"
#       #subnet_key = "app"
#       #subnet_id = "/subscriptions/97958dac-xxxx-xxxx-xxxx-9f436fa73bd4/resourceGroups/jana-rg-spoke/providers/Microsoft.Network/virtualNetworks/jana-vnet-spoke/subnets/jana-snet-app"
#       subnet_id = "/subscriptions/6f035180-4066-42f0-b0fa-5fbc1ae67500/resourceGroups/gcci-rg-agency-vnets/providers/Microsoft.Network/virtualNetworks/gcci-vnet-internet/subnets/cep-snet-app-function-apps-internet"
#       enabled = true
#     }

#     # # Optional
#     # private_endpoints = {
#     #   # Require enforce_private_link_endpoint_network_policies set to true on the subnet
#     #   private-link-level4 = {         
#     #     name       = "private-link-for-function-apps"
#     #     # db subnet
#     #     subnet_id = "/subscriptions/6f035180-4066-42f0-b0fa-5fbc1ae67500/resourceGroups/gcci-rg-agency-vnets/providers/Microsoft.Network/virtualNetworks/cep-vnet-spoke-internet-re1/subnets/cep-snet-app-internet",
#     #     resource_group_key = "mssql_rg_re1"
        
#     #     private_service_connection = {
#     #       name                 = "private-service-connection1"
#     #       is_manual_connection = false
#     #       subresource_names    = ["sqlServer"] #?????
#     #     }

        
#     #     # todo: is private dns required?
#     #     # private_dns = {
#     #     #   zone_group_name = "privatelink_mssql"
#     #     #   lz_key = "shared_services"   # If the DNS keys are deployed in a remote landingzone
#     #     #   keys = ["database_windows_net_dns_zone_re1"] 
#     #     # }        

#     #   }
#     # }


#   }

#   # getjob
#   f1 = {
#     name               = "getjob"
#     resource_group_key = "function_app_re1"
#     region             = "region1"
#     app_service_plan_key = "asp1"
#     storage_account_key  = "sa1"
#     settings = {
#       subnet_id = "/subscriptions/6f035180-4066-42f0-b0fa-5fbc1ae67500/resourceGroups/gcci-rg-agency-vnets/providers/Microsoft.Network/virtualNetworks/gcci-vnet-internet/subnets/cep-snet-app-function-apps-internet"
#       enabled = true
#     }
#   }

# }