
search_services = {
  ss_1 = {
    resource_group = {
      key = "search_service_rg_re1"
    }
    name               = "ss-openai" # search-service openai    
    sku               = "standard" # ["free" "basic" "standard" "standard2" "standard3" "storage_optimized_l1" "storage_optimized_l2"]
    replica_count     = "1" 
    partition_count   = "1"

    # Optional - private endpoint
    private_endpoints = {
      # Require enforce_private_link_endpoint_network_policies set to true on the subnet
      pe1 = {
        name               = "search-service-pep"
        resource_group_key = "search_service_rg_re1"
        subnet_id = "/subscriptions/{{subscription_id}}/resourceGroups/{{resource_group_name}}/providers/Microsoft.Network/virtualNetworks/{{internet_vnet_name}}/subnets/{{prefix}}-snet-ai-internet"

        private_service_connection = {
          name                 = "search-service-psc"
          is_manual_connection = false
          subresource_names    = ["searchService"]
        }

        # TODO: test private
        private_dns = {
          zone_group_name = "default"
          # lz_key          = "shared_services"
          keys = ["search_service_dns_re1"]
        }
      }
    }   

    tags = { 
      purpose = "{{zone_code}} search service" 
      project-code = "{{project_code}}" 
      env = "{{caf_environment}}" 
      zone = "{{zone_code}}"
      tier = "{{tier_code}}"          
    } 

    # # TODO: debug the diagnostic_profiles - this is not working 10 Oct 2023
    # # you can setup up to 5 key
    diagnostic_profiles = {
      central_logs_region1 = {
        definition_key   = "search_service"
        destination_type = "log_analytics"
        destination_key  = "central_logs"
        lz_key = "shared_services" # TODO: is this required?
      }
    }      

  }


}
