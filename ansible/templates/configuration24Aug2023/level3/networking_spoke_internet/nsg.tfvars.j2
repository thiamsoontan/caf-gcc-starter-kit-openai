#
# Definition of the networking security groups
#
network_security_group_definition = {
  # This entry is applied to all subnets with no NSG defined
  empty_nsg = {
    version            = 1
    resource_group_key = "networking_spoke_re1"
    name               = "empty"
    nsg = []
  }

  # AKS
  # The following FQDN / application rules are required:
  # Destination FQDN	          Port	Use
  # *.hcp.<location>.azmk8s.io	HTTPS:443	
  #   Required for Node <-> API server communication. Replace <location> with the region where your AKS cluster is deployed. This is required for clusters with konnectivity-agent enabled. Konnectivity also uses Application-Layer Protocol Negotiation (ALPN) to communicate between agent and server. Blocking or rewriting the ALPN extension will cause a failure. This is not required for private clusters.
  # mcr.microsoft.com	          HTTPS:443	- MicrosoftContainerRegistry
  #    Required to access images in Microsoft Container Registry (MCR). This registry contains first-party images/charts (for example, coreDNS, etc.). These images are required for the correct creation and functioning of the cluster, including scale and upgrade operations.
  # *.data.mcr.microsoft.com	  HTTPS:443	- MicrosoftContainerRegistry
  #    Required for MCR storage backed by the Azure content delivery network (CDN).
  # management.azure.com	      HTTPS:443	- AzureResourceManager
  #    Required for Kubernetes operations against the Azure API.
  # login.microsoftonline.com	  HTTPS:443	
  #    Required for Azure Active Directory authentication.
  # packages.microsoft.com	    HTTPS:443	
  #    This address is the Microsoft packages repository used for cached apt-get operations. Example packages include Moby, PowerShell, and Azure CLI.
  # acs-mirror.azureedge.net	  HTTPS:443	
  #    This address is for the repository required to download and install required binaries like kubenet and Azure CNI.

  # ** The only way is to use egress firewall now **
  # Restrict egress traffic using Azure firewall
  # Azure Firewall provides an Azure Kubernetes Service (AzureKubernetesService) FQDN Tag to simplify this configuration.


# Service Tag			            Port
# =====================================
# Inbound
# =====================================
# agw cidr			              443
# AzureLoadBalancer		        *
# CyberArk CIDR			          22, 139, 445, 3389

# Outbound
# =====================================
# MicrosoftContainerRegistry	443
# MicrosoftCloudAppSecurity	  443
# AzureKeyVault.SoutheastAsia	443
# AzureMonitor			          443, 1886
# AzureCloud.SoutheastAsia	  80, 32526, 443
# Storage				              443, 445

# AzureResourceManager

# mssql cidr			            1433


# apiudp AzureCloud UDP 1194
# apitcp AzureCloud TCP 9000
# time ntp.ubuntu.com UDP 123

# az network firewall network-rule create -g $RG -f $FWNAME --collection-name 'aksfwnr' -n 'apiudp' --protocols 'UDP' --source-addresses '*' --destination-addresses "AzureCloud.$LOC" --destination-ports 1194 --action allow --priority 100

# az network firewall network-rule create -g $RG -f $FWNAME --collection-name 'aksfwnr' -n 'apitcp' --protocols 'TCP' --source-addresses '*' --destination-addresses "AzureCloud.$LOC" --destination-ports 9000

# az network firewall network-rule create -g $RG -f $FWNAME --collection-name 'aksfwnr' -n 'time' --protocols 'UDP' --source-addresses '*' --destination-fqdns 'ntp.ubuntu.com' --destination-ports 123


  app_nsg = {
    version            = 1
    resource_group_key = "networking_spoke_re1"
    name               = "app"   
    tags = { 
      purpose = "app tier network security group"
      project-code = "cep" 
      env = "{{caf_environment}}" 
      zone = "internet"     
    }     
    flow_logs = {
      name    = "app-nsg-internet" 
      version = 2
      enabled = true
      storage_account = {
        storage_account_destination = "all_regions" # refer to value in shared services diagnostic_storage_accounts storage all_regions 
        retention = {
          enabled = true
          days    = 365
        }
      }
    }   

    nsg = [   
    # begin management inbound
      # {
      #   name                       = "Inbound-HTTPS-managemet0002"
      #   priority                   = "103"
      #   direction                  = "Inbound"
      #   access                     = "Allow"
      #   protocol                   = "tcp"
      #   source_port_range          = "*"
      #   destination_port_range     = "*"
      #   source_address_prefix      = "172.16.5.0/24"
      #   destination_address_prefix = "{{cidr_internet_zone_subnet_app}}"
      # }, 
      # # inbound from app aks control plane      
      # {
      #   name                       = "out-communication-allow-443-AzureMonitor0002"
      #   priority                   = "104"
      #   direction                  = "Outbound"
      #   access                     = "Allow"
      #   protocol                   = "tcp"
      #   source_port_range          = "*"
      #   destination_port_range     = "*"
      #   source_address_prefix      = "{{cidr_internet_zone_subnet_app}}"
      #   destination_address_prefix = "172.16.5.0/24"
      # },  
      # do not change
      # inbound https 443 management infra "{{cidr_management_zone_subnet_infra}}" > app "{{cidr_internet_zone_subnet_app}}"          
      {
        name                       = "Inbound-HTTPS-managemet"
        priority                   = "100"
        direction                  = "Inbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "443"
        source_address_prefix      = "{{cidr_management_zone_subnet_infra}}"
        destination_address_prefix = "{{cidr_internet_zone_subnet_app}}"
      }, 
      # do not change      
      # inbound http 80 management infra "{{cidr_management_zone_subnet_infra}}" > app "{{cidr_internet_zone_subnet_app}}"          
      {
        name                       = "Inbound-HTTP-managemet"
        priority                   = "110"
        direction                  = "Inbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "80-82"
        source_address_prefix      = "{{cidr_management_zone_subnet_infra}}"
        destination_address_prefix = "{{cidr_internet_zone_subnet_app}}"
      },   
      # do not change            
      # inbound ssh 22 management bastion "{{cidr_management_zone_subnet_bastion}}" > app "{{cidr_internet_zone_subnet_app}}"          
      {
        name                       = "Inbound-SSH-managemet"
        priority                   = "120"
        direction                  = "Inbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "22"
        source_address_prefix      = "{{cidr_management_zone_subnet_bastion}}"
        destination_address_prefix = "{{cidr_internet_zone_subnet_app}}"
      }, 
    # end management inbound      
    # begin ingress inbound             
      # inbound https 443 internet agw web "{{cidr_ingress_egress_zone_subnet_ingress_agw_internet}}" > app "{{cidr_internet_zone_subnet_app}}"      
      {
        name                       = "Inbound-HTTPS-web"
        priority                   = "200"
        direction                  = "Inbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "443"
        source_address_prefix      = "{{cidr_ingress_egress_zone_subnet_ingress_agw_internet}}"
        destination_address_prefix = "{{cidr_internet_zone_subnet_app}}"
      },
      # inbound http 80-82 internet agw web "{{cidr_ingress_egress_zone_subnet_ingress_agw_internet}}" > app "{{cidr_internet_zone_subnet_app}}" - optional      
      {
        name                       = "Inbound-HTTP-web"
        priority                   = "210"
        direction                  = "Inbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "80-82"
        source_address_prefix      = "{{cidr_ingress_egress_zone_subnet_ingress_agw_internet}}"
        destination_address_prefix = "{{cidr_internet_zone_subnet_app}}"
      }, 
      # inbound http 8080-8082 internet agw  web "{{cidr_ingress_egress_zone_subnet_ingress_agw_internet}}" > app "{{cidr_internet_zone_subnet_app}}" - optional  
      {
        name                       = "Inbound-HTTP-8080"
        priority                   = "220"
        direction                  = "Inbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "8080-8082"
        source_address_prefix      = "{{cidr_ingress_egress_zone_subnet_ingress_agw_internet}}"
        destination_address_prefix = "{{cidr_internet_zone_subnet_app}}"
      }, 

      # inbound https 443 intranet agw web "{{cidr_ingress_egress_zone_subnet_ingress_agw_intranet}}" > app "{{cidr_internet_zone_subnet_app}}"      
      {
        name                       = "Inbound-HTTPS-intranet-web"
        priority                   = "230"
        direction                  = "Inbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "443"
        source_address_prefix      = "{{cidr_ingress_egress_zone_subnet_ingress_agw_intranet}}"
        destination_address_prefix = "{{cidr_internet_zone_subnet_app}}"
      },
      # inbound http 80-82 intranet agw web "{{cidr_ingress_egress_zone_subnet_ingress_agw_intranet}}" > app "{{cidr_internet_zone_subnet_app}}" - optional     
      {
        name                       = "Inbound-HTTP-intranet-web"
        priority                   = "240"
        direction                  = "Inbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "80-82"
        source_address_prefix      = "{{cidr_ingress_egress_zone_subnet_ingress_agw_intranet}}"
        destination_address_prefix = "{{cidr_internet_zone_subnet_app}}"
      }, 
      # inbound http 8080-8082 intranet agw  web "{{cidr_ingress_egress_zone_subnet_ingress_agw_intranet}}" > app "{{cidr_internet_zone_subnet_app}}" - optional  
      {
        name                       = "Inbound-HTTP-intranet-8080-8082"
        priority                   = "250"
        direction                  = "Inbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "8080-8082"
        source_address_prefix      = "{{cidr_ingress_egress_zone_subnet_ingress_agw_intranet}}"
        destination_address_prefix = "{{cidr_internet_zone_subnet_app}}"
      },
      # inbound Azure Load Balancer probes to AKS: port *
      {
        name                       = "Inbound-Allow-AzureLoadBalancer"
        priority                   = "260"
        direction                  = "Inbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "*"
        source_address_prefix      = "AzureLoadBalancer"
        destination_address_prefix = "{{cidr_internet_zone_subnet_app}}"
      },   

      # source devpps destination app cidr 
      {
        name                       = "Inbound-HTTPS-devpps-runner"
        priority                   = "270"
        direction                  = "Inbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "*"
        source_address_prefix      = "100.4.0.0/28" # devops CIDR
        destination_address_prefix = "{{cidr_internet_zone_subnet_app}}" # app CIDR        
      },            
      # custom deny all  - TODO: test what else is required - TODO: set this aks is not working.
      # {
      #   name                       = "Custom-Deny-All-Inbound"
      #   priority                   = "4000"
      #   direction                  = "Inbound"
      #   access                     = "Deny"
      #   protocol                   = "*"
      #   source_port_range          = "*"
      #   destination_port_range     = "*"
      #   source_address_prefix      = "*"
      #   destination_address_prefix = "*"
      # }, 


#       TODO: CyberArt
# name: Inbound-CyberArt
# priority: 260
# direction: Inbound
# access: Allow
# protocol: Tcp
# source_port_range: *
# destination_port_ranges: [22, 139, 445, 3389]
# source_address_prefix: {cyberark-client}
# destination_address_prefix: {app-subnet-cidr}

    # end ingress inbound                                              
 
    # begin management outbound

      # Outbound
      # =====================================
      # MicrosoftContainerRegistry	443
      # AzureFrontDoor.FirstParty   443  
      # MicrosoftCloudAppSecurity	  443
      # AzureKeyVault.SoutheastAsia	443
      # AzureMonitor			          443, 1886
      # AzureCloud.SoutheastAsia	  80, 32526, 443
      # Storage				              443, 445

      # mssql cidr			            1433 
      # management subnet           443

      # begin mandatory aks fqdn 
      # do not change
      # Outbound https 443 MCR      
      {
        name                       = "Outbound-HTTPS-MCR"
        priority                   = "300"
        direction                  = "Outbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "443"
        source_address_prefix      = "{{cidr_internet_zone_subnet_app}}"
        destination_address_prefix = "MicrosoftContainerRegistry"
      },
      # Outbound https 53 MCR    
      {
        name                       = "Outbound-53-MCR"
        priority                   = "301"
        direction                  = "Outbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "53"
        source_address_prefix      = "{{cidr_internet_zone_subnet_app}}"
        destination_address_prefix = "MicrosoftContainerRegistry"
      },      

    #   # Outbound https 443 AzureFrontDoor.FirstParty - pre-requisite for MCR      
      {
        name                       = "Outbound-HTTPS-AzureFrontDoor-FirstParty"
        priority                   = "302"
        direction                  = "Outbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "443"
        source_address_prefix      = "{{cidr_internet_zone_subnet_app}}"
        destination_address_prefix = "AzureFrontDoor.FirstParty"
      }, 

      # do not change
      # outbound https 443 MicrosoftCloudAppSecurity"
      {
        name                       = "Outbound-443-MicrosoftCloudAppSecurity"
        priority                   = "310"
        direction                  = "Outbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "443"
        source_address_prefix      = "{{cidr_internet_zone_subnet_app}}"
        destination_address_prefix = "MicrosoftCloudAppSecurity"
      },        

      # do not change
      # outbound https 443 AzureKeyVault.SouthEastAsia"
      {
        name                       = "Outbound-443-AzureKeyVault.SouthEastAsia"
        priority                   = "320"
        direction                  = "Outbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "443"
        source_address_prefix      = "{{cidr_internet_zone_subnet_app}}"
        destination_address_prefix = "AzureKeyVault.SouthEastAsia"
      }, 

      # do not change
      # outbound https 443 AzureMonitor : port 443, 1886
      {
        name                       = "Outbound-443-AzureMonitor"
        priority                   = "330"
        direction                  = "Outbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "443"
        source_address_prefix      = "{{cidr_internet_zone_subnet_app}}"
        destination_address_prefix = "AzureMonitor"
      },
      {
        name                       = "Outbound-1886-AzureMonitor"
        priority                   = "340"
        direction                  = "Outbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "1886"
        source_address_prefix      = "{{cidr_internet_zone_subnet_app}}"
        destination_address_prefix = "AzureMonitor"
      },  

      # do not change
      # Outbound https 443 AzureCloud  : port 80, 32526, 443               
      {
        name                       = "Outbound-HTTPS-AzureCloud.SouthEastAsia"
        priority                   = "350"
        direction                  = "Outbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "443"
        source_address_prefix      = "{{cidr_internet_zone_subnet_app}}"
        destination_address_prefix = "AzureCloud.SouthEastAsia"
      }, 
      {
        name                       = "Outbound-HTTP-AzureCloud.SouthEastAsia"
        priority                   = "360"
        direction                  = "Outbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "80"
        source_address_prefix      = "{{cidr_internet_zone_subnet_app}}"
        destination_address_prefix = "AzureCloud.SouthEastAsia"
      },  
      {
        name                       = "Outbound-32526-AzureCloud.SouthEastAsia"
        priority                   = "370"
        direction                  = "Outbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "32526"
        source_address_prefix      = "{{cidr_internet_zone_subnet_app}}"
        destination_address_prefix = "AzureCloud.SouthEastAsia"
      },   

# apiudp AzureCloud UDP 1194
# apitcp AzureCloud TCP 9000
# time ntp.ubuntu.com UDP 123 
      {
        name                       = "Outbound-1194-AzureCloud.SouthEastAsia"
        priority                   = "371"
        direction                  = "Outbound"
        access                     = "Allow"
        protocol                   = "udp"
        source_port_range          = "*"
        destination_port_range     = "1194"
        source_address_prefix      = "{{cidr_internet_zone_subnet_app}}"
        destination_address_prefix = "AzureCloud.SouthEastAsia"
      }, 
      {
        name                       = "Outbound-9000-AzureCloud.SouthEastAsia"
        priority                   = "372"
        direction                  = "Outbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "9000"
        source_address_prefix      = "{{cidr_internet_zone_subnet_app}}"
        destination_address_prefix = "AzureCloud.SouthEastAsia"
      }, 
      {
        name                       = "Outbound-123-ntp-ubuntu-com"
        priority                   = "373"
        direction                  = "Outbound"
        access                     = "Allow"
        protocol                   = "udp"
        source_port_range          = "*"
        destination_port_range     = "123"
        source_address_prefix      = "{{cidr_internet_zone_subnet_app}}"
        destination_address_prefix = "Internet" #"91.189.91.157"
      }, 

      # do not change
      # outbound https 443 Storage" : port 443, 445
      {
        name                       = "Outbound-443-Storage"
        priority                   = "380"
        direction                  = "Outbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "443"
        source_address_prefix      = "{{cidr_internet_zone_subnet_app}}"
        destination_address_prefix = "Storage"
      },
      {
        name                       = "Outbound-445-Storage"
        priority                   = "390"
        direction                  = "Outbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "445"
        source_address_prefix      = "{{cidr_internet_zone_subnet_app}}"
        destination_address_prefix = "Storage"
      },         
  
      # Outbound https 443 MCR - AzureResourceManager       
      {
        name                       = "Outbound-HTTPS-AzureResourceManager"
        priority                   = "391"
        direction                  = "Outbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "443"
        source_address_prefix      = "{{cidr_internet_zone_subnet_app}}"
        destination_address_prefix = "AzureResourceManager"
      }, 
      # Outbound https 443 MCR - AzureActiveDirectory       
      {
        name                       = "Outbound-HTTPS-AzureActiveDirectory"
        priority                   = "392"
        direction                  = "Outbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "443"
        source_address_prefix      = "{{cidr_internet_zone_subnet_app}}"
        destination_address_prefix = "AzureActiveDirectory"
      },       

      # Outbound https 443 AzureFrontDoor.Frontend 
      {
        name                       = "Outbound-HTTPS-AzureFrontDoor.Frontend"
        priority                   = "393"
        direction                  = "Outbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "443"
        source_address_prefix      = "{{cidr_internet_zone_subnet_app}}"
        destination_address_prefix = "AzureFrontDoor.Frontend"
      }, 
      # end aks fqdn   


    
      # # # do not change
      # # # outbound https 443 EventHub"
      # {
      #   name                       = "Outbound-443-EventHub"
      #   priority                   = "110"
      #   direction                  = "Outbound"
      #   access                     = "Allow"
      #   protocol                   = "tcp"
      #   source_port_range          = "*"
      #   destination_port_range     = "443"
      #   source_address_prefix      = "{{cidr_internet_zone_subnet_app}}"
      #   destination_address_prefix = "EventHub"
      # },  
      # # do not change
      # # outbound https 443 AzureActiveDirectory"
      # {
      #   name                       = "Outbound-443-AzureActiveDirectory"
      #   priority                   = "120"
      #   direction                  = "Outbound"
      #   access                     = "Allow"
      #   protocol                   = "tcp"
      #   source_port_range          = "*"
      #   destination_port_range     = "443"
      #   source_address_prefix      = "{{cidr_internet_zone_subnet_app}}"
      #   destination_address_prefix = "AzureActiveDirectory"
      # }, 
               

      # # TODO: outbound aks to mcr, azure services via egress firewall                
      # {
      #   name                       = "Outbound-443-VirtualNetwork"
      #   priority                   = "170"
      #   direction                  = "Outbound"
      #   access                     = "Allow"
      #   protocol                   = "tcp"
      #   source_port_range          = "*"
      #   destination_port_range     = "443"
      #   source_address_prefix      = "VirtualNetwork"
      #   destination_address_prefix = "VirtualNetwork"
      # },      
      
    # end management outbound  

    # # begin aks FQDN requirements  


    #   # Outbound https 443 AzureFrontDoor.FirstParty - pre-requisite for MCR      
    #   {
    #     name                       = "Outbound-HTTPS-AzureFrontDoor-FirstParty"
    #     priority                   = "210"
    #     direction                  = "Outbound"
    #     access                     = "Allow"
    #     protocol                   = "tcp"
    #     source_port_range          = "*"
    #     destination_port_range     = "443"
    #     source_address_prefix      = "{{cidr_internet_zone_subnet_app}}"
    #     destination_address_prefix = "AzureFrontDoor.FirstParty"
    #   },   
     




              

    #   # TODO: CyberArt: port 22, 139, 445, 3389]   
    # # end aks FQDN requirements  

      # do not change
      # outbound https 443 app "{{cidr_internet_zone_subnet_app}}" > management infra "{{cidr_management_zone_subnet_infra}}"
      {
        name                       = "Outbound-443-management"
        priority                   = "400"
        direction                  = "Outbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "443"
        source_address_prefix      = "{{cidr_internet_zone_subnet_app}}"
        destination_address_prefix = "{{cidr_management_zone_subnet_infra}}"
      },
      # outbound SQL Server 1443 app "{{cidr_internet_zone_subnet_app}}" > db "{{cidr_internet_zone_subnet_data}}"
      {
        name                       = "Outbound-1443-db"
        priority                   = "410"
        direction                  = "Outbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "1443"
        source_address_prefix      = "{{cidr_internet_zone_subnet_app}}"
        destination_address_prefix = "{{cidr_internet_zone_subnet_data}}"
      },
      # outbound postgresql 5432 app "{{cidr_internet_zone_subnet_app}}" > db "{{cidr_internet_zone_subnet_data}}"
      {
        name                       = "Outbound-5432-postgresql"
        priority                   = "420"
        direction                  = "Outbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "5432"
        source_address_prefix      = "{{cidr_internet_zone_subnet_app}}"
        destination_address_prefix = "{{cidr_internet_zone_subnet_data}}"
      },  
      # outbound redis caches 6380-6383 app "{{cidr_internet_zone_subnet_app}}" > db "{{cidr_internet_zone_subnet_data}}"
      {
        name                       = "Outbound-6380-6383-redis"
        priority                   = "430"
        direction                  = "Outbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "6380-6383"
        source_address_prefix      = "{{cidr_internet_zone_subnet_app}}"
        destination_address_prefix = "{{cidr_internet_zone_subnet_data}}"
      }, 
      # outbound to egress firewall internet * app "{{cidr_internet_zone_subnet_app}}" > egress firewall "{{cidr_ingress_egress_zone_subnet_egress_internet}}"
      {
        name                       = "Outbound-egress-firewall-internet"
        priority                   = "440"
        direction                  = "Outbound"
        access                     = "Allow"
        protocol                   = "*"
        source_port_range          = "*"
        destination_port_range     = "*"
        source_address_prefix      = "{{cidr_internet_zone_subnet_app}}"
        destination_address_prefix = "{{cidr_ingress_egress_zone_subnet_egress_internet}}"
      },       
      # # custom deny all outbound - TODO: test what else is required
      # {
      #   name                       = "Custom-Deny-All-Outbound"
      #   priority                   = "4000"
      #   direction                  = "Outbound"
      #   access                     = "Deny"
      #   protocol                   = "tcp"
      #   source_port_range          = "*"
      #   destination_port_range     = "*"
      #   source_address_prefix      = "*"
      #   destination_address_prefix = "*"
      # },               
    ]
  }

  db_nsg = {
    version            = 1
    resource_group_key = "networking_spoke_re1"
    name               = "db"    
    tags = { 
      purpose = "database tier network security group"
      project-code = "cep" 
      env = "{{caf_environment}}" 
      zone = "internet"           
    }
    flow_logs = {
      name    = "db-nsg-internet" 
      version = 2
      enabled = true
      storage_account = {
        storage_account_destination = "all_regions" # refer to value in shared services diagnostic_storage_accounts storage all_regions 
        retention = {
          enabled = true
          days    = 365
        }
      }
    }  
        

    nsg = [  
    # management inbound
       # do not change            
      # inbound ssh 22 management bastion "{{cidr_management_zone_subnet_bastion}}" > db "{{cidr_internet_zone_subnet_app}}"          
      {
        name                       = "Inbound-SSH-management"
        priority                   = "100"
        direction                  = "Inbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "22"
        source_address_prefix      = "{{cidr_management_zone_subnet_bastion}}"
        destination_address_prefix = "{{cidr_internet_zone_subnet_data}}"
      }, 
      {
        name                       = "Inbound-MSSQL-management"
        priority                   = "110"
        direction                  = "Inbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "1433"
        source_address_prefix      = "{{cidr_management_zone_subnet_bastion}}"
        destination_address_prefix = "{{cidr_internet_zone_subnet_data}}"
      },
      {
        name                       = "Inbound-POSTRESQL-management"
        priority                   = "120"
        direction                  = "Inbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "5432"
        source_address_prefix      = "{{cidr_management_zone_subnet_bastion}}"
        destination_address_prefix = "{{cidr_internet_zone_subnet_data}}"
      }, 
      {
        name                       = "Inbound-Redis-Caches-management"
        priority                   = "130"
        direction                  = "Inbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "6380-6383"
        source_address_prefix      = "{{cidr_management_zone_subnet_bastion}}"
        destination_address_prefix = "{{cidr_internet_zone_subnet_data}}"
      },           
    # end management inbound   
      # inbound mssql 1433 app "{{cidr_internet_zone_subnet_app}}" > db "{{cidr_internet_zone_subnet_data}}"         
      {
        name                       = "Inbound-MSSQL-app"
        priority                   = "200"
        direction                  = "Inbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "1433"
        source_address_prefix      = "{{cidr_internet_zone_subnet_app}}"
        destination_address_prefix = "{{cidr_internet_zone_subnet_data}}"
      },
      # inbound postgresql 5432 app "{{cidr_internet_zone_subnet_app}}" > db "{{cidr_internet_zone_subnet_data}}"        
      {
        name                       = "Inbound-POSTRESQL-app"
        priority                   = "210"
        direction                  = "Inbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "5432"
        source_address_prefix      = "{{cidr_internet_zone_subnet_app}}"
        destination_address_prefix = "{{cidr_internet_zone_subnet_data}}"
      }, 
      # inbound Redis 6380-6383 app "{{cidr_internet_zone_subnet_app}}" > db "{{cidr_internet_zone_subnet_data}}"        
      {
        name                       = "Inbound-Redis-Caches-app"
        priority                   = "220"
        direction                  = "Inbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "6380-6383"
        source_address_prefix      = "{{cidr_internet_zone_subnet_app}}"
        destination_address_prefix = "{{cidr_internet_zone_subnet_data}}"
      },            
      {
        name                       = "Inbound-MSSQL"
        priority                   = "230"
        direction                  = "Inbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "1433"
        source_address_prefix      = "VirtualNetwork"
        destination_address_prefix = "VirtualNetwork"
      },
      {
        name                       = "Inbound-POSTRESQL"
        priority                   = "240"
        direction                  = "Inbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "5432"
        source_address_prefix      = "VirtualNetwork"
        destination_address_prefix = "VirtualNetwork"
      }, 
      {
        name                       = "Inbound-Redis-Caches"
        priority                   = "250"
        direction                  = "Inbound"
        access                     = "Allow"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "6380"
        source_address_prefix      = "VirtualNetwork"
        destination_address_prefix = "VirtualNetwork"
      },   

      # custom deny all inbound
      {
        name                       = "Custom-Deny-All-Inbound"
        priority                   = "4000"
        direction                  = "Inbound"
        access                     = "Deny"
        protocol                   = "*"
        source_port_range          = "*"
        destination_port_range     = "*"
        source_address_prefix      = "*"
        destination_address_prefix = "*"
      },                                       
 
      # custom deny all outbound
      {
        name                       = "Custom-Deny-All-Outbound"
        priority                   = "4000"
        direction                  = "Outbound"
        access                     = "Deny"
        protocol                   = "tcp"
        source_port_range          = "*"
        destination_port_range     = "*"
        source_address_prefix      = "*"
        destination_address_prefix = "*"
      },  

    ]
  }

}
